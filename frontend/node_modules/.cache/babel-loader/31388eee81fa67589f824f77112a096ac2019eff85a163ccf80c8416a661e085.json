{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Harikar\\\\Employee-Management-System---A-Simple-CRUD-Application\\\\frontend\\\\src\\\\components\\\\EmployeeForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EmployeeForm({\n  refresh\n}) {\n  _s();\n  const [form, setForm] = useState({\n    name: \"\",\n    email: \"\",\n    role: \"\",\n    department: \"\",\n    phone: \"\"\n  });\n  const handleChange = e => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value\n    });\n  };\n  const addEmployee = async e => {\n    e.preventDefault();\n    await fetch(\"http://localhost:5000/api/employees\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(form)\n    });\n    setForm({\n      name: \"\",\n      email: \"\",\n      role: \"\",\n      department: \"\",\n      phone: \"\"\n    });\n    refresh();\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: addEmployee,\n    className: \"flex gap-2 mb-4 flex-wrap\",\n    children: [[\"name\", \"email\", \"role\", \"department\", \"phone\"].map(field => /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: field,\n      placeholder: field,\n      value: form[field],\n      onChange: handleChange,\n      required: true,\n      className: \"border p-2 rounded\"\n    }, field, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"bg-blue-500 text-white px-4 rounded\",\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(EmployeeForm, \"5ctP+kr/GShKgDOFZ10ekVIGiBU=\");\n_c = EmployeeForm;\nvar _c;\n$RefreshReg$(_c, \"EmployeeForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","EmployeeForm","refresh","_s","form","setForm","name","email","role","department","phone","handleChange","e","target","value","addEmployee","preventDefault","fetch","method","headers","body","JSON","stringify","onSubmit","className","children","map","field","type","placeholder","onChange","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Harikar/Employee-Management-System---A-Simple-CRUD-Application/frontend/src/components/EmployeeForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport default function EmployeeForm({ refresh }) {\r\n  const [form, setForm] = useState({ name: \"\", email: \"\", role: \"\", department: \"\", phone: \"\" });\r\n\r\n  const handleChange = (e) => {\r\n    setForm({ ...form, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const addEmployee = async (e) => {\r\n    e.preventDefault();\r\n    await fetch(\"http://localhost:5000/api/employees\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(form)\r\n    });\r\n    setForm({ name: \"\", email: \"\", role: \"\", department: \"\", phone: \"\" });\r\n    refresh();\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={addEmployee} className=\"flex gap-2 mb-4 flex-wrap\">\r\n      {[\"name\", \"email\", \"role\", \"department\", \"phone\"].map((field) => (\r\n        <input\r\n          key={field}\r\n          type=\"text\"\r\n          name={field}\r\n          placeholder={field}\r\n          value={form[field]}\r\n          onChange={handleChange}\r\n          required\r\n          className=\"border p-2 rounded\"\r\n        />\r\n      ))}\r\n      <button type=\"submit\" className=\"bg-blue-500 text-white px-4 rounded\">Add</button>\r\n    </form>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,eAAe,SAASC,YAAYA,CAAC;EAAEC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EAChD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC;IAAEQ,IAAI,EAAE,EAAE;IAAEC,KAAK,EAAE,EAAE;IAAEC,IAAI,EAAE,EAAE;IAAEC,UAAU,EAAE,EAAE;IAAEC,KAAK,EAAE;EAAG,CAAC,CAAC;EAE9F,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1BP,OAAO,CAAC;MAAE,GAAGD,IAAI;MAAE,CAACQ,CAAC,CAACC,MAAM,CAACP,IAAI,GAAGM,CAAC,CAACC,MAAM,CAACC;IAAM,CAAC,CAAC;EACvD,CAAC;EAED,MAAMC,WAAW,GAAG,MAAOH,CAAC,IAAK;IAC/BA,CAAC,CAACI,cAAc,CAAC,CAAC;IAClB,MAAMC,KAAK,CAAC,qCAAqC,EAAE;MACjDC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAClB,IAAI;IAC3B,CAAC,CAAC;IACFC,OAAO,CAAC;MAAEC,IAAI,EAAE,EAAE;MAAEC,KAAK,EAAE,EAAE;MAAEC,IAAI,EAAE,EAAE;MAAEC,UAAU,EAAE,EAAE;MAAEC,KAAK,EAAE;IAAG,CAAC,CAAC;IACrER,OAAO,CAAC,CAAC;EACX,CAAC;EAED,oBACEF,OAAA;IAAMuB,QAAQ,EAAER,WAAY;IAACS,SAAS,EAAC,2BAA2B;IAAAC,QAAA,GAC/D,CAAC,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,YAAY,EAAE,OAAO,CAAC,CAACC,GAAG,CAAEC,KAAK,iBAC1D3B,OAAA;MAEE4B,IAAI,EAAC,MAAM;MACXtB,IAAI,EAAEqB,KAAM;MACZE,WAAW,EAAEF,KAAM;MACnBb,KAAK,EAAEV,IAAI,CAACuB,KAAK,CAAE;MACnBG,QAAQ,EAAEnB,YAAa;MACvBoB,QAAQ;MACRP,SAAS,EAAC;IAAoB,GAPzBG,KAAK;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAQX,CACF,CAAC,eACFnC,OAAA;MAAQ4B,IAAI,EAAC,QAAQ;MAACJ,SAAS,EAAC,qCAAqC;MAAAC,QAAA,EAAC;IAAG;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9E,CAAC;AAEX;AAAChC,EAAA,CAnCuBF,YAAY;AAAAmC,EAAA,GAAZnC,YAAY;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}